d[!is.finite(d$lowest), 'lowest'] = median(d[is.finite(d$lowest), 'lowest'])
row_prefix = sprintf('dg_%s_%s', seq_subset, w)
colnames(d) = c(colnames(d)[1:(length(colnames(d))-22)], paste(row_prefix, c(colnames(d)[(length(colnames(d))-21):length(colnames(d))]), sep='_') )
return(d)
}
# E. 5'/3' ORF DATA
AppendUorfData = function(d){
for(row_num in 1:nrow(mrnas_p)){
mrna = mrnas_p[row_num,]
d[row_num, 'orfs_5utr_fr0_atgs'] = mrna$orfs_5utr_fr0_atgs
d[row_num, 'orfs_5utr_fr1_atgs'] = mrna$orfs_5utr_fr1_atgs
d[row_num, 'orfs_5utr_fr2_atgs'] = mrna$orfs_5utr_fr2_atgs
d[row_num, 'orfs_3utr_fr0_atgs'] = mrna$orfs_3utr_fr0_atgs
d[row_num, 'orfs_3utr_fr1_atgs'] = mrna$orfs_3utr_fr1_atgs
d[row_num, 'orfs_3utr_fr2_atgs'] = mrna$orfs_3utr_fr2_atgs
}
return(d)
}
AppendUorfData2 = function(d){
for(row_num in 1:nrow(mrnas_p)){
mrna = mrnas_p[row_num,]
d[row_num, 'orfs_5utr_atgs'] = mrna$orfs_5utr_fr0_atgs + mrna$orfs_5utr_fr1_atgs + mrna$orfs_5utr_fr2_atgs
d[row_num, 'orfs_3utr_atgs'] = mrna$orfs_3utr_fr0_atgs + mrna$orfs_3utr_fr1_atgs + mrna$orfs_3utr_fr2_atgs
}
return(d)
}
# F. HALF LIFE DATA
AppendHalflifeData = function(d, rsr=T, rhl=T, phl=T){
for(row_num in 1:nrow(mrnas_p)){
mrna = mrnas_p[row_num,]
if(rsr){ d[row_num, 'synthesistime'] = mrna$synthesistime }
if(rhl){ d[row_num, 'halflife'] = mrna$halflife }
if(phl){ d[row_num, 'p_halflife'] = mrna$p_halflife}
}
return(d)
}
# G. AMINO ACID DATA
AppendAminoAcidDataNoStop = function(d, seq_subset='cds'){
codon_info_no_stop = codon_info[codon_info$prop!='X',]
for(row_num in 1:nrow(mrnas_p)){
mrna = mrnas_p[row_num,]
codon_subset = switch(seq_subset,
cds={NULL},
cds_s={c(2, 10)}, # first 9 codons after start codon
cds_s2={c(2,39)}) # First 39 codons as mentioned by Tuller 2011
codons = CalcVarPerCodonRatio(mrna, NULL, codon_subset)
for(amino_acid in unique(codon_info_no_stop$aa)){
d[row_num, sprintf('amino_acid_ratio_%s_%s', seq_subset, tolower(amino_acid))] = sum(codons[codons$codon%in%codon_info_no_stop[codon_info_no_stop$aa==amino_acid,'codon'],'ratio_sum'])
}
}
return(d)
}
# G. AMINO ACID DATA
AppendAminoAcidDataNoStopNoStart = function(d, seq_subset='cds'){
codon_info_no_stop = codon_info[codon_info$prop!='X',]
for(row_num in 1:nrow(mrnas_p)){
mrna = mrnas_p[row_num,]
codon_subset = switch(seq_subset,
cds={c(2, length(mrna$codons[[1]]))},
cds_s={c(2, 10)}, # first 9 codons after start codon
cds_s2={c(2,39)}) # First 39 codons as mentioned by Tuller 2011
codons = CalcVarPerCodonRatio(mrna, NULL, codon_subset)
for(amino_acid in unique(codon_info_no_stop$aa)){
d[row_num, sprintf('amino_acid_ratio_%s_%s', seq_subset, tolower(amino_acid))] = sum(codons[codons$codon%in%codon_info_no_stop[codon_info_no_stop$aa==amino_acid,'codon'],'ratio_sum'])
}
}
return(d)
}
# G. AMINO ACID PROPERTY DATA
AppendAminoAcidPropDataNoStop = function(d, seq_subset='cds'){
codon_info_no_stop = codon_info[codon_info$prop!='X',]
for(row_num in 1:nrow(mrnas_p)){
mrna = mrnas_p[row_num,]
codon_subset = switch(seq_subset,
cds={NULL},
cds_s={c(2, 10)}, # first 9 codons after start codon
cds_s2={c(2,39)}) # First 39 codons as mentioned by Tuller 2011
codons = CalcVarPerCodonRatio(mrna, NULL, codon_subset)
for(amino_acid_prop in unique(codon_info_no_stop$prop)){
d[row_num, sprintf('amino_acid_prop_ratio_%s_%s', seq_subset, tolower(amino_acid_prop))] = sum(codons[codons$codon%in%codon_info_no_stop[codon_info_no_stop$prop==amino_acid_prop,'codon'],'ratio_sum'])
}
}
return(d)
}
# G. AMINO ACID PROPERTY DATA
AppendAminoAcidPropDataNoStopNoStart = function(d, seq_subset='cds'){
codon_info_no_stop = codon_info[codon_info$prop!='X',]
for(row_num in 1:nrow(mrnas_p)){
mrna = mrnas_p[row_num,]
codon_subset = switch(seq_subset,
cds={c(2, length(mrna$codons[[1]]))},
cds_s={c(2, 10)}, # first 9 codons after start codon
cds_s2={c(2,39)}) # First 39 codons as mentioned by Tuller 2011
codons = CalcVarPerCodonRatio(mrna, NULL, codon_subset)
for(amino_acid_prop in unique(codon_info_no_stop$prop)){
d[row_num, sprintf('amino_acid_prop_ratio_%s_%s', seq_subset, tolower(amino_acid_prop))] = sum(codons[codons$codon%in%codon_info_no_stop[codon_info_no_stop$prop==amino_acid_prop,'codon'],'ratio_sum'])
}
}
return(d)
}
# G. AMINO ACID DATA POLY PROLINE
AppendAminoAcidPprData = function(d){
for(row_num in 1:nrow(mrnas_p)){
mrna = mrnas_p[row_num,]
# Get [G|D|A|P] PP [P|W|N|D|G] from AA sequence
matches = gregexpr('(?=([G|D|A|P]PP|PP[P|W|N|D|G]))',mrna$seq_prot, perl=T)[[1]]
pps = length(matches[matches>-1 & matches<34]) # Only get those at the start of the cds
d[row_num, 'pp_count'] = pps
}
return(d)
}
# I. RPF DATA
AppendRpfData = function(d, rpf_per_rna=T, rpf_regression=T) {
for(row_num in 1:nrow(mrnas_p)){
mrna = mrnas_p[row_num,]
if(rpf_per_rna) { d[row_num, 'rpf_per_rna'] = mrna$rpf_per_rna }
if(rpf_regression) { d[row_num, 'rpf_regression'] = mrna$rpf_regression }
}
return(d)
}
##############################################################################################
##### INDIVIDUAL DATA SETS ###################################################################
# BASE DATA SET
data_set_empty = mrnas_p[,c('pro_per_rna','sys_id')]
# A1 - seq lengths
CreateA1 = function(){
data_set_a1 = mrnas_p[,c('pro_per_rna','sys_id','seq_5utr_length','seq_prot_length','seq_3utr_length')]
for(i in 1:length(permuted_pro_per_rna)){
postfix = ''
if(i > 1) {
postfix = sprintf('_p%s',(i-1))
data_set_a1$pro_per_rna = permuted_pro_per_rna[,i]
}
write.table(data_set_a1, sprintf('./feature_sets/data_set_a1%s.csv',postfix), sep='\t', row.names=F)
}
}
# B - Nucleotides
CreateBSets = function(){
data_set_b1 = AppendNucleotideData(data_set_empty)
data_set_b2 = AppendNucleotideData(data_set_empty, 'utr5')
data_set_b3 = AppendNucleotideData(data_set_empty, 'cds')
data_set_b4 = AppendNucleotideData(data_set_empty, 'utr3')
data_set_b5 = AppendNucleotideData(data_set_empty, 'cds_s')
for(i in 1:length(permuted_pro_per_rna)){
postfix = ''
if(i > 1) {
postfix = sprintf('_p%s',(i-1))
data_set_b1$pro_per_rna = permuted_pro_per_rna[,i]
data_set_b2$pro_per_rna = permuted_pro_per_rna[,i]
data_set_b3$pro_per_rna = permuted_pro_per_rna[,i]
data_set_b4$pro_per_rna = permuted_pro_per_rna[,i]
data_set_b5$pro_per_rna = permuted_pro_per_rna[,i]
}
write.table(data_set_b1, sprintf('./feature_sets/data_set_b1%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_b2, sprintf('./feature_sets/data_set_b2%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_b3, sprintf('./feature_sets/data_set_b3%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_b4, sprintf('./feature_sets/data_set_b4%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_b5, sprintf('./feature_sets/data_set_b5%s.csv',postfix), sep='\t', row.names=F)
}
}
# C - Codons
CreateCSets = function(){
data_set_c5 = AppendCodonDataNoStop(data_set_empty, 'cds_s')
data_set_c6 = AppendCodonDataNoStop(data_set_empty, 'cds_s2')
data_set_c7 = AppendCodonDataNoStopNoStart(data_set_empty)
for(i in 1:length(permuted_pro_per_rna)){
postfix = ''
if(i > 1) {
postfix = sprintf('_p%s',(i-1))
data_set_c5$pro_per_rna = permuted_pro_per_rna[,i]
data_set_c6$pro_per_rna = permuted_pro_per_rna[,i]
data_set_c7$pro_per_rna = permuted_pro_per_rna[,i]
}
write.table(data_set_c5, sprintf('./feature_sets/data_set_c5%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_c6, sprintf('./feature_sets/data_set_c6%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_c7, sprintf('./feature_sets/data_set_c7%s.csv',postfix), sep='\t', row.names=F)
}
}
# D14 - Struct window size 14
CreateD14Sets = function(){
data_set_db1 = AppendStructureData(data_set_empty, 'full', 14)
data_set_db2 = AppendStructureData(data_set_empty, 'utr5', 14)
data_set_db3 = AppendStructureData(data_set_empty, 'cds', 14)
data_set_db4 = AppendStructureData(data_set_empty, 'utr3', 14)
data_set_db5 = AppendStructureData(data_set_empty, 'cds_s', 14)
data_set_db6 = AppendStructureData(data_set_empty, 'init', 14)
data_set_db7 = AppendStructureData(data_set_empty, 'cds_s2', 14)
for(i in 1:length(permuted_pro_per_rna)){
postfix = ''
if(i > 1) {
postfix = sprintf('_p%s',(i-1))
data_set_db1$pro_per_rna = permuted_pro_per_rna[,i]
data_set_db2$pro_per_rna = permuted_pro_per_rna[,i]
data_set_db3$pro_per_rna = permuted_pro_per_rna[,i]
data_set_db4$pro_per_rna = permuted_pro_per_rna[,i]
data_set_db5$pro_per_rna = permuted_pro_per_rna[,i]
data_set_db6$pro_per_rna = permuted_pro_per_rna[,i]
data_set_db7$pro_per_rna = permuted_pro_per_rna[,i]
}
write.table(data_set_db1, sprintf('./feature_sets/data_set_db1%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_db2, sprintf('./feature_sets/data_set_db2%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_db3, sprintf('./feature_sets/data_set_db3%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_db4, sprintf('./feature_sets/data_set_db4%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_db5, sprintf('./feature_sets/data_set_db5%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_db6, sprintf('./feature_sets/data_set_db6%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_db7, sprintf('./feature_sets/data_set_db7%s.csv',postfix), sep='\t', row.names=F)
}
}
# E - SORFs
CreateESets = function(){
data_set_e1 = AppendUorfData(data_set_empty)
data_set_e2 = AppendUorfData2(data_set_empty)
for(i in 1:length(permuted_pro_per_rna)){
postfix = ''
if(i > 1) {
postfix = sprintf('_p%s',(i-1))
data_set_e1$pro_per_rna = permuted_pro_per_rna[,i]
data_set_e2$pro_per_rna = permuted_pro_per_rna[,i]
}
write.table(data_set_e1, sprintf('./feature_sets/data_set_e1%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_e2, sprintf('./feature_sets/data_set_e2%s.csv',postfix), sep='\t', row.names=F)
}
}
# F - Half life
CreateFSets = function(){
data_set_f1 = AppendHalflifeData(data_set_empty)
data_set_f2 = AppendHalflifeData(data_set_empty, T, F, F) # rna synth
data_set_f3 = AppendHalflifeData(data_set_empty, F, T, F) # rna hl
data_set_f4 = AppendHalflifeData(data_set_empty, F, F, T) # pro hl
for(i in 1:length(permuted_pro_per_rna)){
postfix = ''
if(i > 1) {
postfix = sprintf('_p%s',(i-1))
data_set_f1$pro_per_rna = permuted_pro_per_rna[,i]
data_set_f2$pro_per_rna = permuted_pro_per_rna[,i]
data_set_f3$pro_per_rna = permuted_pro_per_rna[,i]
data_set_f4$pro_per_rna = permuted_pro_per_rna[,i]
}
write.table(data_set_f1, sprintf('./feature_sets/data_set_f1%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_f2, sprintf('./feature_sets/data_set_f2%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_f3, sprintf('./feature_sets/data_set_f3%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_f4, sprintf('./feature_sets/data_set_f4%s.csv',postfix), sep='\t', row.names=F)
}
}
# G - Amino Acids
CreateGSets = function(){
data_set_g5 = AppendAminoAcidPprData(data_set_empty)
data_set_g9 = AppendAminoAcidDataNoStop(data_set_empty, 'cds_s')
data_set_gA = AppendAminoAcidDataNoStop(data_set_empty, 'cds_s2')
data_set_gC = AppendAminoAcidPropDataNoStop(data_set_empty, 'cds_s')
data_set_gD = AppendAminoAcidPropDataNoStop(data_set_empty, 'cds_s2')
data_set_gE = AppendAminoAcidDataNoStopNoStart(data_set_empty)
data_set_gF = AppendAminoAcidPropDataNoStopNoStart(data_set_empty)
for(i in 1:length(permuted_pro_per_rna)){
postfix = ''
if(i > 1) {
postfix = sprintf('_p%s',(i-1))
data_set_g5$pro_per_rna = permuted_pro_per_rna[,i]
data_set_g9$pro_per_rna = permuted_pro_per_rna[,i]
data_set_gA$pro_per_rna = permuted_pro_per_rna[,i]
data_set_gC$pro_per_rna = permuted_pro_per_rna[,i]
data_set_gD$pro_per_rna = permuted_pro_per_rna[,i]
data_set_gE$pro_per_rna = permuted_pro_per_rna[,i]
data_set_gF$pro_per_rna = permuted_pro_per_rna[,i]
}
write.table(data_set_g5, sprintf('./feature_sets/data_set_g5%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_g9, sprintf('./feature_sets/data_set_g9%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_gA, sprintf('./feature_sets/data_set_gA%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_gC, sprintf('./feature_sets/data_set_gC%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_gD, sprintf('./feature_sets/data_set_gD%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_gE, sprintf('./feature_sets/data_set_gE%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_gF, sprintf('./feature_sets/data_set_gF%s.csv',postfix), sep='\t', row.names=F)
}
}
# H1 - RNA abundance
CreateH1 = function(){
data_set_h1 = mrnas_p[,c('pro_per_rna','sys_id', 'avg_count_rna')]
for(i in 1:length(permuted_pro_per_rna)){
postfix = ''
if(i > 1) {
postfix = sprintf('_p%s',(i-1))
data_set_h1$pro_per_rna = permuted_pro_per_rna[,i]
}
write.table(data_set_h1, sprintf('./feature_sets/data_set_h1%s.csv',postfix), sep='\t', row.names=F)
}
}
# I - RPF
CreateISets = function(){
data_set_i1 = AppendRpfData(data_set_empty)
data_set_i2 = AppendRpfData(data_set_empty, T, F) # rpf per rna
data_set_i3 = AppendRpfData(data_set_empty, F, T) # rpf regression
for(i in 1:length(permuted_pro_per_rna)){
postfix = ''
if(i > 1) {
postfix = sprintf('_p%s',(i-1))
data_set_i1$pro_per_rna = permuted_pro_per_rna[,i]
data_set_i2$pro_per_rna = permuted_pro_per_rna[,i]
data_set_i3$pro_per_rna = permuted_pro_per_rna[,i]
}
write.table(data_set_i1, sprintf('./feature_sets/data_set_i1%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_i2, sprintf('./feature_sets/data_set_i2%s.csv',postfix), sep='\t', row.names=F)
write.table(data_set_i3, sprintf('./feature_sets/data_set_i3%s.csv',postfix), sep='\t', row.names=F)
}
}
# FULL
CreateFullSet = function(){
data_set_ultra_mega = AppendNucleotideData(data_set_a1, 'full')
data_set_ultra_mega = AppendNucleotideData(data_set_ultra_mega, 'utr5')
data_set_ultra_mega = AppendNucleotideData(data_set_ultra_mega, 'cds')
data_set_ultra_mega = AppendNucleotideData(data_set_ultra_mega, 'utr3')
data_set_ultra_mega = AppendNucleotideData(data_set_ultra_mega, 'cds_s')
data_set_ultra_mega = AppendCodonDataNoStopNoStart(data_set_ultra_mega, 'cds')
data_set_ultra_mega = AppendCodonDataNoStop(data_set_ultra_mega, 'cds_s')
data_set_ultra_mega = AppendCodonDataNoStop(data_set_ultra_mega, 'cds_s2')
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'full', 14)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'utr5', 14)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds', 14)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'utr3', 14)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds_s', 14)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'init', 14)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds_s2', 14)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'full', 28)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'utr5', 28)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds', 28)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'utr3', 28)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds_s', 28)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'init', 28)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds_s2', 28)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'full', 50)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'utr5', 50)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds', 50)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'utr3', 50)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds_s', 50)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'init', 50)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds_s2', 50)
data_set_ultra_mega = AppendUorfData(data_set_ultra_mega)
data_set_ultra_mega = AppendUorfData2(data_set_ultra_mega)
data_set_ultra_mega = AppendHalflifeData(data_set_ultra_mega)
data_set_ultra_mega = AppendAminoAcidDataNoStopNoStart(data_set_ultra_mega)
data_set_ultra_mega = AppendAminoAcidDataNoStop(data_set_ultra_mega, 'cds_s')
data_set_ultra_mega = AppendAminoAcidPropDataNoStopNoStart(data_set_ultra_mega)
data_set_ultra_mega = AppendAminoAcidPropDataNoStop(data_set_ultra_mega, 'cds_s')
data_set_ultra_mega = AppendAminoAcidPprData(data_set_ultra_mega)  #PolyProline
data_set_ultra_mega = AppendAminoAcidDataNoStop(data_set_ultra_mega, 'cds_s2')
data_set_ultra_mega = AppendAminoAcidPropDataNoStop(data_set_ultra_mega, 'cds_s2')
data_set_ultra_mega[,'avg_count_rna'] = mrnas_p[,'avg_count_rna'] # H1
data_set_ultra_mega = AppendRpfData(data_set_ultra_mega)
write.table(data_set_ultra_mega, './feature_sets/data_set_ultra_mega2.csv', sep='\t', row.names=F)
data_set_ultra_mega = read.table('./feature_sets/data_set_ultra_mega2.csv', sep='\t', header = T)
}
CreateA1()
CreateBSets()
CreateCSets()
CreateD14Sets()
CreateESets()
CreateFSets()
CreateGSets()
CreateH1()
CreateISets()
#CreateFullSet()
##############################################################################################
##### (MANUAL) COMBINED DATA SETS ############################################################
# Full set               seq, nuc, cod, aac, aap, ppr, str, orf, abn
data_set_x0 = mrnas_p[,c('pro_per_rna','sys_id','seq_5utr_length','seq_prot_length','seq_3utr_length')]
data_set_x0 = AppendNucleotideData(data_set_x0, 'cds')
data_set_x0 = AppendCodonDataNoStopNoStart(data_set_x0)
data_set_x0 = AppendAminoAcidDataNoStopNoStart(data_set_x0)
data_set_x0 = AppendAminoAcidPropDataNoStopNoStart(data_set_x0)
data_set_x0 = AppendAminoAcidPprData(data_set_x0)
data_set_x0 = AppendStructureData(data_set_x0, 'cds', 14)
data_set_x0 = AppendUorfData2(data_set_x0)
data_set_x0$avg_count_rna = mrnas_p$avg_count_rna
write.table(data_set_x0, './feature_sets/data_set_x0_111111111.csv', sep='\t', row.names=F)
# Best individuals set   seq, nuc, cod, aac, aap, ---, str, ---, ---
data_set_x0 = mrnas_p[,c('pro_per_rna','sys_id','seq_5utr_length','seq_prot_length','seq_3utr_length')]
data_set_x0 = AppendNucleotideData(data_set_x0, 'cds')
data_set_x0 = AppendCodonDataNoStopNoStart(data_set_x0)
data_set_x0 = AppendAminoAcidDataNoStopNoStart(data_set_x0)
data_set_x0 = AppendAminoAcidPropDataNoStopNoStart(data_set_x0)
#data_set_x0 = AppendAminoAcidPprData(data_set_x0)
data_set_x0 = AppendStructureData(data_set_x0, 'cds', 14)
#data_set_x0 = AppendUorfData2(data_set_x0)
#data_set_x0$avg_count_rna = mrnas_p$avg_count_rna
write.table(data_set_x0, './feature_sets/data_set_x0_111110100.csv', sep='\t', row.names=F)
# Best individuals set   seq, nuc, cod, ---, ---, ---, str, ---, ---
data_set_x0 = mrnas_p[,c('pro_per_rna','sys_id','seq_5utr_length','seq_prot_length','seq_3utr_length')]
data_set_x0 = AppendNucleotideData(data_set_x0, 'cds')
data_set_x0 = AppendCodonDataNoStopNoStart(data_set_x0)
#data_set_x0 = AppendAminoAcidDataNoStopNoStart(data_set_x0)
#data_set_x0 = AppendAminoAcidPropDataNoStopNoStart(data_set_x0)
#data_set_x0 = AppendAminoAcidPprData(data_set_x0)
data_set_x0 = AppendStructureData(data_set_x0, 'cds', 14)
#data_set_x0 = AppendUorfData2(data_set_x0)
#data_set_x0$avg_count_rna = mrnas_p$avg_count_rna
write.table(data_set_x0, './feature_sets/data_set_x0_111000100.csv', sep='\t', row.names=F)
# Best individuals set   seq, nuc, ---, aac, ---, ---, str, ---, ---
data_set_x0 = mrnas_p[,c('pro_per_rna','sys_id','seq_5utr_length','seq_prot_length','seq_3utr_length')]
data_set_x0 = AppendNucleotideData(data_set_x0, 'cds')
#data_set_x0 = AppendCodonDataNoStopNoStart(data_set_x0)
data_set_x0 = AppendAminoAcidDataNoStopNoStart(data_set_x0)
#data_set_x0 = AppendAminoAcidPropDataNoStopNoStart(data_set_x0)
#data_set_x0 = AppendAminoAcidPprData(data_set_x0)
data_set_x0 = AppendStructureData(data_set_x0, 'cds', 14)
#data_set_x0 = AppendUorfData2(data_set_x0)
#data_set_x0$avg_count_rna = mrnas_p$avg_count_rna
write.table(data_set_x0, './feature_sets/data_set_x0_110100100.csv', sep='\t', row.names=F)
# Best individuals set   seq, nuc, cod, ---, aap, ---, str, ---, ---
data_set_x0 = mrnas_p[,c('pro_per_rna','sys_id','seq_5utr_length','seq_prot_length','seq_3utr_length')]
data_set_x0 = AppendNucleotideData(data_set_x0, 'cds')
data_set_x0 = AppendCodonDataNoStopNoStart(data_set_x0)
data_set_x0 = AppendAminoAcidDataNoStopNoStart(data_set_x0)
#data_set_x0 = AppendAminoAcidPropDataNoStopNoStart(data_set_x0)
#data_set_x0 = AppendAminoAcidPprData(data_set_x0)
data_set_x0 = AppendStructureData(data_set_x0, 'cds', 14)
#data_set_x0 = AppendUorfData2(data_set_x0)
#data_set_x0$avg_count_rna = mrnas_p$avg_count_rna
write.table(data_set_x0, './feature_sets/data_set_x0_111010100.csv', sep='\t', row.names=F)
# Best individuals set   seq, nuc, ---, aac, aap, ---, str, ---, ---
data_set_x0 = mrnas_p[,c('pro_per_rna','sys_id','seq_5utr_length','seq_prot_length','seq_3utr_length')]
data_set_x0 = AppendNucleotideData(data_set_x0, 'cds')
#data_set_x0 = AppendCodonDataNoStopNoStart(data_set_x0)
data_set_x0 = AppendAminoAcidDataNoStopNoStart(data_set_x0)
data_set_x0 = AppendAminoAcidPropDataNoStopNoStart(data_set_x0)
#data_set_x0 = AppendAminoAcidPprData(data_set_x0)
data_set_x0 = AppendStructureData(data_set_x0, 'cds', 14)
#data_set_x0 = AppendUorfData2(data_set_x0)
#data_set_x0$avg_count_rna = mrnas_p$avg_count_rna
write.table(data_set_x0, './feature_sets/data_set_x0_110110100.csv', sep='\t', row.names=F)
# Best individuals set   seq, nuc, cod, aac, ---, ---, str, ---, ---
data_set_x0 = mrnas_p[,c('pro_per_rna','sys_id','seq_5utr_length','seq_prot_length','seq_3utr_length')]
data_set_x0 = AppendNucleotideData(data_set_x0, 'cds')
data_set_x0 = AppendCodonDataNoStopNoStart(data_set_x0)
data_set_x0 = AppendAminoAcidDataNoStopNoStart(data_set_x0)
#data_set_x0 = AppendAminoAcidPropDataNoStopNoStart(data_set_x0)
#data_set_x0 = AppendAminoAcidPprData(data_set_x0)
data_set_x0 = AppendStructureData(data_set_x0, 'cds', 14)
#data_set_x0 = AppendUorfData2(data_set_x0)
#data_set_x0$avg_count_rna = mrnas_p$avg_count_rna
write.table(data_set_x0, './feature_sets/data_set_x0_111100100.csv', sep='\t', row.names=F)
#### DATA SETS WITH EXPERIMENTAL DATA (BASED ON BEST NO-EXPERIMENTAL-DATA DATA SET)####
best_no_exp_data_data_set = mrnas_p[,c('pro_per_rna','sys_id','seq_5utr_length','seq_prot_length','seq_3utr_length')]
best_no_exp_data_data_set = AppendNucleotideData(best_no_exp_data_data_set, 'cds')
best_no_exp_data_data_set = AppendAminoAcidDataNoStopNoStart(best_no_exp_data_data_set)
best_no_exp_data_data_set = AppendAminoAcidPropDataNoStopNoStart(best_no_exp_data_data_set)
best_no_exp_data_data_set = AppendStructureData(best_no_exp_data_data_set, 'cds', 14)
# RPF, RSR, RHL, PHL
data_set_x1 = AppendRpfData(best_no_exp_data_data_set)
data_set_x1 = AppendHalflifeData(data_set_x1)
write.table(data_set_x1, './feature_sets/data_set_x0_110110100-1111.csv', sep='\t', row.names=F)
# RPF, ---, ---, ---
data_set_x1 = AppendRpfData(best_no_exp_data_data_set)
write.table(data_set_x1, './feature_sets/data_set_x0_110110100-1000.csv', sep='\t', row.names=F)
# ---, RSR, ---, ---
data_set_x1 = AppendHalflifeData(best_no_exp_data_data_set, T, F, F)
write.table(data_set_x1, './feature_sets/data_set_x0_110110100-0100.csv', sep='\t', row.names=F)
# ---, ---, RHL, ---
data_set_x1 = AppendHalflifeData(best_no_exp_data_data_set, F, T, F)
write.table(data_set_x1, './feature_sets/data_set_x0_110110100-0010.csv', sep='\t', row.names=F)
# ---, ---, ---, PHL
data_set_x1 = AppendHalflifeData(best_no_exp_data_data_set, F, F, T)
write.table(data_set_x1, './feature_sets/data_set_x0_110110100-0001.csv', sep='\t', row.names=F)
##############################################################################################
##### (AUTOMATIC) COMBINED DATA SETS #########################################################
# See forest.py
CreateFullSet()
CreateFullSet = function(){
data_set_a1 = mrnas_p[,c('pro_per_rna','sys_id','seq_5utr_length','seq_prot_length','seq_3utr_length')]
data_set_ultra_mega = AppendNucleotideData(data_set_a1, 'full')
data_set_ultra_mega = AppendNucleotideData(data_set_ultra_mega, 'utr5')
data_set_ultra_mega = AppendNucleotideData(data_set_ultra_mega, 'cds')
data_set_ultra_mega = AppendNucleotideData(data_set_ultra_mega, 'utr3')
data_set_ultra_mega = AppendNucleotideData(data_set_ultra_mega, 'cds_s')
data_set_ultra_mega = AppendCodonDataNoStopNoStart(data_set_ultra_mega, 'cds')
data_set_ultra_mega = AppendCodonDataNoStop(data_set_ultra_mega, 'cds_s')
data_set_ultra_mega = AppendCodonDataNoStop(data_set_ultra_mega, 'cds_s2')
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'full', 14)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'utr5', 14)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds', 14)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'utr3', 14)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds_s', 14)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'init', 14)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds_s2', 14)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'full', 28)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'utr5', 28)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds', 28)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'utr3', 28)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds_s', 28)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'init', 28)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds_s2', 28)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'full', 50)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'utr5', 50)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds', 50)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'utr3', 50)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds_s', 50)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'init', 50)
data_set_ultra_mega = AppendStructureData(data_set_ultra_mega, 'cds_s2', 50)
data_set_ultra_mega = AppendUorfData(data_set_ultra_mega)
data_set_ultra_mega = AppendUorfData2(data_set_ultra_mega)
data_set_ultra_mega = AppendHalflifeData(data_set_ultra_mega)
data_set_ultra_mega = AppendAminoAcidDataNoStopNoStart(data_set_ultra_mega)
data_set_ultra_mega = AppendAminoAcidDataNoStop(data_set_ultra_mega, 'cds_s')
data_set_ultra_mega = AppendAminoAcidPropDataNoStopNoStart(data_set_ultra_mega)
data_set_ultra_mega = AppendAminoAcidPropDataNoStop(data_set_ultra_mega, 'cds_s')
data_set_ultra_mega = AppendAminoAcidPprData(data_set_ultra_mega)  #PolyProline
data_set_ultra_mega = AppendAminoAcidDataNoStop(data_set_ultra_mega, 'cds_s2')
data_set_ultra_mega = AppendAminoAcidPropDataNoStop(data_set_ultra_mega, 'cds_s2')
data_set_ultra_mega[,'avg_count_rna'] = mrnas_p[,'avg_count_rna'] # H1
data_set_ultra_mega = AppendRpfData(data_set_ultra_mega)
write.table(data_set_ultra_mega, './feature_sets/data_set_ultra_mega2.csv', sep='\t', row.names=F)
data_set_ultra_mega = read.table('./feature_sets/data_set_ultra_mega2.csv', sep='\t', header = T)
}
CreateFullSet()
